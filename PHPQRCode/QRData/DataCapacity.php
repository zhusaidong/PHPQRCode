<?php
/**
* 数据容量
* @author Zsdroid [635925926@qq.com]
* @version 0.1.0.0
*/
namespace PHPQRCode\QRData;

use \PHPQRCode\ErrorCorrectCode;

class DataCapacity
{
	private $DataCapacity = [];
	public function data($key,$number,$mix)
	{
		$arr = [
			ErrorCorrectCode::L,
			ErrorCorrectCode::M,
			ErrorCorrectCode::Q,
			ErrorCorrectCode::H
		];
		$this->DataCapacity[$key] = [
			'Number'=>array_combine($arr,$number),
			'Mix'	=>array_combine($arr,$mix),
		];
	}
	public function init()
	{
		$this->data(1,[41,34,27,17],[25,20,16,10]);
		$this->data(2,[77,63,48,34],[47,38,29,20]);
		$this->data(3,[127,101,77,58],[77,61,47,35]);
		$this->data(4,[187,149,111,82],[114,90,67,50]);
		$this->data(5,[255,202,144,106],[154,122,87,64]);
		$this->data(6,[322,255,178,139],[195,154,108,84]);
		$this->data(7,[370,293,207,154],[224,178,125,93]);
		$this->data(8,[461,365,259,202],[279,221,157,122]);
		$this->data(9,[552,432,312,235],[335,262,189,143]);
		$this->data(10,[652,513,364,288],[395,311,221,174]);
		$this->data(11,[772,604,427,331],[468,366,259,200]);
		$this->data(12,[883,691,489,374],[535,419,296,227]);
		$this->data(13,[1022,796,580,427],[619,483,352,259]);
		$this->data(14,[1101,871,621,468],[667,528,376,283]);
		$this->data(15,[1250,991,703,530],[758,600,426,321]);
		$this->data(16,[1408,1082,775,602],[854,656,470,365]);
		$this->data(17,[1548,1212,876,674],[938,734,531,408]);
		$this->data(18,[1725,1346,948,746],[1046,816,574,452]);
		$this->data(19,[1903,1500,1063,813],[1153,909,644,493]);
		$this->data(20,[2061,1600,1159,919],[1249,970,702,557]);
		$this->data(21,[2232,1708,1224,969],[1352,1035,742,587]);
		$this->data(22,[2409,1872,1358,1056],[1460,1134,823,640]);
		$this->data(23,[2620,2059,1468,1108],[1588,1248,890,672]);
		$this->data(24,[2812,2188,1588,1228],[1704,1326,963,744]);
		$this->data(25,[3057,2395,1718,1286],[1853,1451,1041,779]);
		$this->data(26,[3283,2544,1804,1425],[1990,1542,1094,864]);
		$this->data(27,[3517,2701,1933,1501],[2132,1637,1172,910]);
		$this->data(28,[3669,2857,2085,1581],[2223,1732,1263,958]);
		$this->data(29,[3909,3035,2181,1677],[2369,1839,1322,1016]);
		$this->data(30,[4158,3289,2358,1782],[2520,1994,1429,1080]);
		$this->data(31,[4417,3486,2473,1897],[2677,2113,1499,1150]);
		$this->data(32,[4686,3693,2670,2022],[2840,2238,1618,1226]);
		$this->data(33,[4965,3909,2805,2157],[3009,2369,1700,1307]);
		$this->data(34,[5253,4134,2949,2301],[3183,2506,1787,1394]);
		$this->data(35,[5529,4343,3081,2361],[3351,2632,1867,1431]);
		$this->data(36,[5836,4588,3244,2524],[3537,2780,1966,1530]);
		$this->data(37,[6153,4775,3417,2625],[3729,2894,2071,1591]);
		$this->data(38,[6479,5039,3599,2735],[3927,3054,2181,1658]);
		$this->data(39,[6743,5313,3791,2927],[4087,3220,2298,1774]);
		$this->data(40,[7089,5596,3993,3057],[4296,3391,2420,1852]);
		
	}
	public function getVersion($length,$errorCorrectCode,$type = 'Number')
	{
		$this->init();
		foreach($this->DataCapacity as $key => $value)
		{
			if(!isset($value[$type]))
			{
				continue;
			}
			if($value[$type][$errorCorrectCode] - $length >= 0)
			{
				return $key;
			}
		}
		return 0;
	}
}
